{"ast":null,"code":"var _jsxFileName = \"/Users/dev/react/ddtest/client/src/components/lineups.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Lineups = props => {\n  _s();\n\n  const [leagues, setLeagues] = useState([]);\n  if (props.leagues !== leagues) setLeagues(props.leagues);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Lineups\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_s(Lineups, \"PDBanXxSO5muD7U7lCbKXeU9p/8=\");\n\n_c = Lineups;\nexport default Lineups;\n\nvar _c;\n\n$RefreshReg$(_c, \"Lineups\");","map":{"version":3,"names":["useState","Lineups","props","leagues","setLeagues"],"sources":["/Users/dev/react/ddtest/client/src/components/lineups.js"],"sourcesContent":["import { useState } from \"react\";\n\nconst Lineups = (props) => {\n    const [leagues, setLeagues] = useState([])\n    if (props.leagues !== leagues) setLeagues(props.leagues)\n\n    return <>\n        <h3>Lineups</h3>\n    </>\n}\nexport default Lineups;"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;;;;AAEA,MAAMC,OAAO,GAAIC,KAAD,IAAW;EAAA;;EACvB,MAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBJ,QAAQ,CAAC,EAAD,CAAtC;EACA,IAAIE,KAAK,CAACC,OAAN,KAAkBA,OAAtB,EAA+BC,UAAU,CAACF,KAAK,CAACC,OAAP,CAAV;EAE/B,oBAAO;IAAA,uBACH;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EADG,iBAAP;AAGH,CAPD;;GAAMF,O;;KAAAA,O;AAQN,eAAeA,OAAf"},"metadata":{},"sourceType":"module"}