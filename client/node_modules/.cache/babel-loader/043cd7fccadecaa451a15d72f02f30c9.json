{"ast":null,"code":"module.exports = command;\n/**\n * command constructs the executable command to run in a shell including the\n * user script, the command arguments.\n *\n * @param  {Object} settings Object as:\n *                           { execOptions: {\n *                               exec: String,\n *                               [script: String],\n *                               [scriptPosition: Number],\n *                               [execArgs: Array<string>]\n *                             }\n *                           }\n * @return {Object}          an object with the node executable and the\n *                           arguments to the command\n */\n\nfunction command(settings) {\n  var options = settings.execOptions;\n  var executable = options.exec;\n  var args = []; // after \"executable\" go the exec args (like --debug, etc)\n\n  if (options.execArgs) {\n    [].push.apply(args, options.execArgs);\n  } // then goes the user's script arguments\n\n\n  if (options.args) {\n    [].push.apply(args, options.args);\n  } // after the \"executable\" goes the user's script\n\n\n  if (options.script) {\n    args.splice((options.scriptPosition || 0) + options.execArgs.length, 0, options.script);\n  }\n\n  return {\n    executable: executable,\n    args: args\n  };\n}","map":{"version":3,"names":["module","exports","command","settings","options","execOptions","executable","exec","args","execArgs","push","apply","script","splice","scriptPosition","length"],"sources":["/Users/dev/react/ddtest/node_modules/nodemon/lib/config/command.js"],"sourcesContent":["module.exports = command;\n\n/**\n * command constructs the executable command to run in a shell including the\n * user script, the command arguments.\n *\n * @param  {Object} settings Object as:\n *                           { execOptions: {\n *                               exec: String,\n *                               [script: String],\n *                               [scriptPosition: Number],\n *                               [execArgs: Array<string>]\n *                             }\n *                           }\n * @return {Object}          an object with the node executable and the\n *                           arguments to the command\n */\nfunction command(settings) {\n  var options = settings.execOptions;\n  var executable = options.exec;\n  var args = [];\n\n  // after \"executable\" go the exec args (like --debug, etc)\n  if (options.execArgs) {\n    [].push.apply(args, options.execArgs);\n  }\n\n  // then goes the user's script arguments\n  if (options.args) {\n    [].push.apply(args, options.args);\n  }\n\n  // after the \"executable\" goes the user's script\n  if (options.script) {\n    args.splice((options.scriptPosition || 0) +\n      options.execArgs.length, 0, options.script);\n  }\n\n  return {\n    executable: executable,\n    args: args,\n  };\n}\n"],"mappings":"AAAAA,MAAM,CAACC,OAAP,GAAiBC,OAAjB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASA,OAAT,CAAiBC,QAAjB,EAA2B;EACzB,IAAIC,OAAO,GAAGD,QAAQ,CAACE,WAAvB;EACA,IAAIC,UAAU,GAAGF,OAAO,CAACG,IAAzB;EACA,IAAIC,IAAI,GAAG,EAAX,CAHyB,CAKzB;;EACA,IAAIJ,OAAO,CAACK,QAAZ,EAAsB;IACpB,GAAGC,IAAH,CAAQC,KAAR,CAAcH,IAAd,EAAoBJ,OAAO,CAACK,QAA5B;EACD,CARwB,CAUzB;;;EACA,IAAIL,OAAO,CAACI,IAAZ,EAAkB;IAChB,GAAGE,IAAH,CAAQC,KAAR,CAAcH,IAAd,EAAoBJ,OAAO,CAACI,IAA5B;EACD,CAbwB,CAezB;;;EACA,IAAIJ,OAAO,CAACQ,MAAZ,EAAoB;IAClBJ,IAAI,CAACK,MAAL,CAAY,CAACT,OAAO,CAACU,cAAR,IAA0B,CAA3B,IACVV,OAAO,CAACK,QAAR,CAAiBM,MADnB,EAC2B,CAD3B,EAC8BX,OAAO,CAACQ,MADtC;EAED;;EAED,OAAO;IACLN,UAAU,EAAEA,UADP;IAELE,IAAI,EAAEA;EAFD,CAAP;AAID"},"metadata":{},"sourceType":"script"}